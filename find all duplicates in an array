HASH SET METHOD
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        unordered_set<int> myset;
        vector<int> ans;
        int n=nums.size();
        for(int i=0; i<n; i++){
            if(myset.find(nums[i]) == myset.end())
            {
                myset.insert(nums[i]);
            }
            else
            {
                ans.push_back(nums[i]);
            }
        }
        return ans;
    }
};
TC-O(N)
SC-O(N)

OPTIMIZED
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int>result;
        for(int n:nums){
            n=abs(n);
            if (nums[n-1]>0){
                nums[n-1]*=-1;
            }
            else{
                result.push_back(n);
            }
        }
        return result;
    }
};

in this,space is reduced to O(1).
